{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\web\\\\react-course\\\\routing\\\\frontend\\\\src\\\\App.js\";\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport HomePage from \"./pages/Home\";\nimport EventPage, { loader as eventsLoader } from \"./pages/Events\";\nimport EventDetailPage from \"./pages/EventsDetail\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EditEvent from \"./pages/EditEvent\";\nimport RootLayout from \"./pages/Root\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 33\n      }, this)\n    }, {\n      path: \"events\",\n      element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 24\n        }, this),\n        loader: eventsLoader\n      }, {\n        path: \":eventId\",\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 42\n        }, this)\n      }, {\n        path: \"new\",\n        element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 37\n        }, this)\n      }, {\n        path: \":eventId/edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 47\n        }, this)\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n//Done\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n//Done\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n//Done\n// 4. Add properly working links to the MainNavigation\n//Done\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n//Done\n// 6. Output a list of dummy events to the EventsPage\n//Done\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n//Done\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n//Done\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","HomePage","EventPage","loader","eventsLoader","EventDetailPage","NewEvent","EditEvent","RootLayout","EventsRootLayout","ErrorPage","jsxDEV","_jsxDEV","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","_c","$RefreshReg$"],"sources":["C:/web/web/react-course/routing/frontend/src/App.js"],"sourcesContent":["import { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport HomePage from \"./pages/Home\";\nimport EventPage, { loader as eventsLoader } from \"./pages/Events\";\nimport EventDetailPage from \"./pages/EventsDetail\";\nimport NewEvent from \"./pages/NewEvent\";\nimport EditEvent from \"./pages/EditEvent\";\nimport RootLayout from \"./pages/Root\";\nimport EventsRootLayout from \"./pages/EventsRoot\";\nimport ErrorPage from \"./pages/Error\";\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <RootLayout />,\n      errorElement: <ErrorPage />,\n      children: [\n        { index: true, element: <HomePage /> },\n        {\n          path: \"events\",\n          element: <EventsRootLayout />,\n          children: [\n            {\n              index: true,\n              element: <EventPage />,\n              loader: eventsLoader,\n            },\n            { path: \":eventId\", element: <EventDetailPage /> },\n            { path: \"new\", element: <NewEvent /> },\n            { path: \":eventId/edit\", element: <EditEvent /> },\n          ],\n        },\n      ],\n    },\n  ]);\n\n  return <RouterProvider router={router}></RouterProvider>;\n}\n\nexport default App;\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n//Done\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n//Done\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n//Done\n// 4. Add properly working links to the MainNavigation\n//Done\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n//Done\n// 6. Output a list of dummy events to the EventsPage\n//Done\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n//Done\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n//Done\n"],"mappings":";AAAA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,SAAS,IAAIC,MAAM,IAAIC,YAAY,QAAQ,gBAAgB;AAClE,OAAOC,eAAe,MAAM,sBAAsB;AAClD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,SAAS,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGd,mBAAmB,CAAC,CACjC;IACEe,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEJ,OAAA,CAACJ,UAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACvBC,YAAY,eAAET,OAAA,CAACF,SAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC3BE,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE,IAAI;MAAEP,OAAO,eAAEJ,OAAA,CAACX,QAAQ;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EACtC;MACEL,IAAI,EAAE,QAAQ;MACdC,OAAO,eAAEJ,OAAA,CAACH,gBAAgB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAC7BE,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,IAAI;QACXP,OAAO,eAAEJ,OAAA,CAACV,SAAS;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QACtBjB,MAAM,EAAEC;MACV,CAAC,EACD;QAAEW,IAAI,EAAE,UAAU;QAAEC,OAAO,eAAEJ,OAAA,CAACP,eAAe;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE,CAAC,EAClD;QAAEL,IAAI,EAAE,KAAK;QAAEC,OAAO,eAAEJ,OAAA,CAACN,QAAQ;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE,CAAC,EACtC;QAAEL,IAAI,EAAE,eAAe;QAAEC,OAAO,eAAEJ,OAAA,CAACL,SAAS;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE,CAAC;IAErD,CAAC;EAEL,CAAC,CACF,CAAC;EAEF,oBAAOR,OAAA,CAACb,cAAc;IAACe,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAiB,CAAC;AAC1D;AAACI,EAAA,GA3BQX,GAAG;AA6BZ,eAAeA,GAAG;;AAElB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}